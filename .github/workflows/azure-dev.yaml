name: Azure Developer CLI

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install Azure Dev CLI
        run: |
          curl -fsSL https://aka.ms/install-azd.sh | bash

      - name: Login to Azure (Federated Credentials)
        if: env.AZURE_CLIENT_ID != ''
        run: |
          azd login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Login to Azure (Client Credentials)
        if: env.AZURE_CREDENTIALS != ''
        run: |
          echo "$AZURE_CREDENTIALS" > azure_credentials.json
          CLIENT_ID=$(jq -r .clientId azure_credentials.json)
          CLIENT_SECRET=$(jq -r .clientSecret azure_credentials.json)
          TENANT_ID=$(jq -r .tenantId azure_credentials.json)

          echo "::add-mask::$CLIENT_SECRET"

          azd login \
            --client-id "$CLIENT_ID" \
            --client-secret "$CLIENT_SECRET" \
            --tenant-id "$TENANT_ID"
      - name: Initialize Azure Dev CLI project
        run: azd init --no-prompt --environment "$AZURE_ENV_NAME"
      - name: Provision Azure resources
        run: azd provision --no-prompt

      - name: Deploy FastAPI app to Azure
        run: azd deploy --no-prompt
